//Write a program in C# to catch a FormatException and throw an appropriate error message to the user.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ques_14
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                Console.WriteLine("Enter a number: ");

                int num = Convert.ToInt32 (Console.ReadLine());

                Console.WriteLine($"Squre of {num} is {num * num}");
            }
            catch (Exception ex)
            {
                Console.Write("Error info:" + ex.Message);
            }
            finally
            {
                Console.Write("Re-try with a different number.");
            }
        }
    }
}


//Write a program in C# to perform 3 or 4 arithmetic operations like getting the square root, etc.
 Also divide a number by zero so that a divide by zero exception gets thrown. Catch the exception and 
display error messages accordingly.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ques_14
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                Console.WriteLine("Enter a number: ");

                int num = Convert.ToInt32(Console.ReadLine());
                Console.Write("Enter symbol(squar,div,sqareroot): ");
               string symbol = Console.ReadLine();

                switch (symbol)
                {
                    case "squar":
                        Console.WriteLine($"Squre of {num} is {num * num}");
                        break;
                    case "div":
                        Console.WriteLine($"Division of {num} is {100 / num}");
                        break;
                    case "squareroot":
                        Console.WriteLine($"Squreroot of {num} is {Math.Sqrt(num)}");
                        break;
                    default:
                        Console.WriteLine("Try other symbol");
                        break;
                }
            }
            catch (Exception ex)
            {
                Console.Write("Error info:" + ex.Message);
            }
            finally
            {
                
                Console.Write("Re-try with a different number.");
            }
        }
    }
}



//Write a program in C# where there is a base Order class. Inherit child classes such as Food Orders, 
Grocery Orders and Clothing Orders etc. Calculate the GST (Goods and Service Taxes) separately with
 percentages 5, 8 and 10 respectively.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace Ques_14
{
    public class Zomato
    {
        public double Food_amount;
        public double Grocery_amount;
        public double Clothing_amount;

    }
            public class Food : Zomato
            {

                double GST_f = 5;
                public void GST1()
                {
                    double GST_Amount1 = Food_amount * GST_f / 100;
                    Console.WriteLine($"GST AMOUNT  of Food: {GST_Amount1}");
                }

            }
            public class Grocery : Zomato
            {

                double GST_g = 8;
                public void GST2()
                {
                    double GST_Amount2 = Grocery_amount * GST_g / 100;
                    Console.WriteLine($"GST AMOUNT  of Grocery: {GST_Amount2}");
                }

            }
        public class Clothing : Zomato
        {

            double GST_c = 8;
            public void GST3()
            {
                double GST_Amount3 = Clothing_amount * GST_c / 100;
                Console.WriteLine($"GST AMOUNT  of Clothing: {GST_Amount3}");
            }

        }
        
    
    internal class call
    {
        static void Main(string[] args)
        {
            Food f = new Food();
            f.Food_amount = 230;
            f.GST1();

            Grocery g = new Grocery();
            g.Grocery_amount = 800;
            g.GST2();

            Clothing c = new Clothing();
            c.Clothing_amount = 2390;
            c.GST3();
        }
    }
}


//Write a program in C# to create a University Class. Base class can be people, derived classes can 
be Student, Teacher and Librarian. The student can take a book (from a library) , give attendance, 
and attend a class. The teacher can take a book (for more days than the student), give and take
 attendance, and take a class. The librarian can allot a book, give attendance. Create methods that 
can be overloaded depending on the calling person.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;
/*
 Write a program in C# to create a University Class. Base class can be people, derived classes can 
be Student, Teacher and Librarian. The student can take a book (from a library) , give attendance, 
and attend a class. The teacher can take a book (for more days than the student), give and take
 attendance, and take a class. The librarian can allot a book, give attendance. Create methods that 
can be overloaded depending on the calling person.

 
 */


namespace Ques_04
{
    public class People
    {
        public string book_name;
        public string student_name;
        public string teacher_name;


        public void info(string book,string teacher,string student)
        {
            this.book_name = book;
            Console.WriteLine("Book name : "+book_name);
            this.student_name = student;
            Console.WriteLine("student name : " +student_name);
            this.teacher_name = teacher;
            Console.WriteLine("Teacher name : " + teacher_name);
        }


    }
    public class students : People
    {

        public void take_book()
        {

            Console.WriteLine("Student can takes  books from Librarian");

        }
        public void give_attendance()
        {
            Console.WriteLine("Present Teacher(Sir/Ma'am)");
        }
        public void attend_class()
        {
            Console.WriteLine("I am attending class\n\n");
        }

    }
            public class Teachers : People
            {


        public void take_book(string book)
        {

            Console.WriteLine("Teachers can take books for more days then students from Librarian");
            info("Cpp programming", "Riya Ma'am", "Sanjana");
        }
        public void take_a_atendance()
        {
            Console.WriteLine("Persent or absent");
        }
        public void give_class()
        {
            Console.WriteLine("I am taking class");
        }

    }
        public class Library : People
        {


        /*The librarian can allot a book
         give attendance*/
        public void take_book(string book,bool attendence,string name)
        {
            Console.WriteLine("Librarian allot the book");
            info("C# programming","Rima","Sanjana");
        }
        public void take_attendance(string name)
        {
            Console.WriteLine("Librarian is taking Attendance\n\n");
        }

    }
        
    
    internal class call
    {
        static void Main(string[] args)
        {
            students s = new students();

            s.take_book();
            s.info("C# programming","Priya Ma'am","Sanju");
            s.give_attendance();
            s.attend_class();


            Teachers t = new Teachers();

            t.take_book("C# programming");

            t.take_a_atendance();
            t.give_class();

            Library l = new Library();

            l.take_book("Geography",true,"Raj");

            l.take_attendance("Student");
        }
    }
}

//Write a program in C# to create a bank account as an abstract class. Ask the user for his/her aadhar. 
Call a method to link bank account number with the aadhar number in an abstract method

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ques_05
{
    abstract class Bank_Account
    { 
      public  abstract void Link_Aadhar_Bank_AccNo();
      
    }
    class Link : Bank_Account
    {
        double aadhar_no;
       public Link()
        {
            aadhar_no = Convert.ToDouble(Console.ReadLine());

        }
        public override void Link_Aadhar_Bank_AccNo()
         {
            Console.WriteLine("Link Bank Account Number with Aadhar Number Successfully!");
        }
}
    internal class Program
    {
        static void Main(string[] args)
        {
            Link link = new Link();

            link.Link_Aadhar_Bank_AccNo();
        }
    }
}


